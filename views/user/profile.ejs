<%- include('../partials/user/header') %>
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
    :root {
        --primary-black: #000000;
        --secondary-black: #1a1a1a;
        --light-gray: #f8f9fa;
        --medium-gray: #6c757d;
        --border-gray: #dee2e6;
        --white: #ffffff;
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        background-color: #f5f5f5;
        color: #333;
    }

    .profile-container {
        display: flex;
        min-height: 100vh;
        padding-top: 100px; /* Account for navbar */
    }

    /* Sidebar Styles */
    .sidebar {
        width: 280px;
        background-color: #fff;
        box-shadow: 2px 0 10px rgba(0,0,0,0.1);
        padding: 20px 0;
        position: fixed;
        height: calc(100vh - 100px);
        top: 100px;
        left: 0;
        overflow-y: auto;
        z-index: 1000;
    }

    .profile-section {
        text-align: center;
        padding: 20px;
        border-bottom: 1px solid #eee;
        margin-bottom: 20px;
    }

    .profile-avatar-container {
        position: relative;
        display: inline-block;
        margin-bottom: 15px;
    }

    .profile-avatar {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        background: linear-gradient(135deg, #111827 0%, #374151 100%);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 24px;
        font-weight: 600;
    }

    .profile-avatar-img {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        object-fit: cover;
        border: 3px solid #fff;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .profile-avatar-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity 0.3s ease;
        color: white;
        font-size: 18px;
    }

    .profile-avatar-container:hover .profile-avatar-overlay {
        opacity: 1;
    }

    .profile-photo-upload {
        display: none;
    }

    /* Main Profile Image Styles */
    .main-profile-avatar-container {
        position: relative;
        width: 120px;
        height: 120px;
        margin: 0 auto;
        cursor: pointer;
    }

    .main-profile-avatar {
        width: 120px;
        height: 120px;
        background: linear-gradient(135deg, #111827 0%, #374151 100%);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 48px;
        color: white;
        font-weight: 700;
        box-shadow: 0 8px 25px rgba(17, 24, 39, 0.3);
        border: 4px solid #fff;
    }

    .main-profile-avatar-img {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        object-fit: cover;
        box-shadow: 0 8px 25px rgba(17, 24, 39, 0.3);
        border: 4px solid #fff;
    }

    .main-profile-avatar-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.6);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity 0.3s ease;
        color: white;
        font-size: 24px;
        cursor: pointer;
    }

    .main-profile-avatar-container:hover .main-profile-avatar-overlay {
        opacity: 1;
    }

    .profile-photo-actions h6 {
        color: #333;
        font-weight: 600;
    }

    .profile-photo-actions .btn {
        border-radius: 6px;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .profile-photo-actions .btn-primary {
        background: linear-gradient(135deg, #111827 0%, #374151 100%);
        border: none;
    }

    .profile-photo-actions .btn-primary:hover {
        background: linear-gradient(135deg, #374151 0%, #111827 100%);
        transform: translateY(-1px);
    }

    .profile-photo-actions .btn-outline-danger:hover {
        transform: translateY(-1px);
    }

    .profile-name {
        font-size: 18px;
        font-weight: 600;
        margin-bottom: 5px;
    }

    .profile-email {
        font-size: 14px;
        color: #666;
    }

    .menu-section h3 {
        padding: 0 20px 10px;
        font-size: 16px;
        font-weight: 600;
        color: #333;
    }

    .menu-item {
        display: flex;
        align-items: center;
        padding: 12px 20px;
        color: #666;
        text-decoration: none;
        transition: background-color 0.2s;
        cursor: pointer;
    }

    .menu-item:hover {
        background-color: #f8f9fa;
        color: #333;
    }

    .menu-item.active {
        background: linear-gradient(135deg, #111827 0%, #374151 100%);
        color: white;
        border-radius: 8px;
        margin: 0 10px;
    }

    .menu-item::before {
        content: '';
        width: 20px;
        height: 20px;
        margin-right: 12px;
        background-size: contain;
        opacity: 0.7;
    }

    /* Main Content Area */
    .main-content {
        margin-left: 280px;
        padding: 20px;
        flex: 1;
        background-color: #f5f5f5;
    }

    .profile-content {
        background: white;
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        width: 100%;
    }

    .profile-header {
        background: linear-gradient(135deg, #000000 0%, #1a1a1a 100%);
        color: white;
        padding: 2rem;
        position: relative;
        overflow: hidden;
    }

    .profile-header::before {
        content: '';
        position: absolute;
        top: -50%;
        right: -50%;
        width: 100%;
        height: 200%;
        background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
        transform: rotate(45deg);
    }

    .profile-body {
        padding: 2rem;
    }

        .info-card {
            background: var(--white);
            border: 2px solid var(--border-gray);
            border-radius: 10px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .info-card:hover {
            border-color: var(--primary-black);
            transform: translateY(-2px);
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
        }

        .info-card h5 {
            color: var(--primary-black);
            font-weight: 600;
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .info-card h5 i {
            width: 20px;
            text-align: center;
        }

        .form-label {
            color: var(--primary-black);
            font-weight: 500;
            margin-bottom: 0.5rem;
        }

        .form-control {
            border: 2px solid var(--border-gray);
            border-radius: 8px;
            padding: 0.75rem 1rem;
            background: var(--white);
            color: var(--primary-black);
            transition: all 0.3s ease;
        }

        .form-control:focus {
            border-color: var(--primary-black);
            box-shadow: 0 0 0 0.2rem rgba(0, 0, 0, 0.1);
            background: var(--white);
            color: var(--primary-black);
        }

        .btn-primary {
            background: var(--primary-black);
            border: 2px solid var(--primary-black);
            color: var(--white);
            font-weight: 500;
            padding: 0.75rem 2rem;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .btn-primary:hover {
            background: var(--white);
            border-color: var(--primary-black);
            color: var(--primary-black);
            transform: translateY(-2px);
        }

        .btn-outline-primary {
            border: 2px solid var(--primary-black);
            color: var(--primary-black);
            background: var(--white);
            font-weight: 500;
            padding: 0.75rem 2rem;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .btn-outline-primary:hover {
            background: var(--primary-black);
            border-color: var(--primary-black);
            color: var(--white);
            transform: translateY(-2px);
        }

        .status-badge {
            padding: 0.5rem 1rem;
            border-radius: 25px;
            font-weight: 500;
            font-size: 0.9rem;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .status-active {
            background: rgba(40, 167, 69, 0.1);
            color: #28a745;
            border: 2px solid rgba(40, 167, 69, 0.3);
        }

        .action-buttons {
            display: flex;
            gap: 1rem;
            flex-wrap: wrap;
        }

        .action-btn {
            flex: 1;
            min-width: 200px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            padding: 1rem;
            border-radius: 10px;
            text-decoration: none;
            transition: all 0.3s ease;
            font-weight: 500;
        }

        .manage-address {
            background: var(--white);
            border: 2px solid var(--primary-black);
            color: var(--primary-black);
        }

        .manage-address:hover {
            background: var(--primary-black);
            color: var(--white);
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .change-password {
            background: var(--primary-black);
            border: 2px solid var(--primary-black);
            color: var(--white);
        }

        .change-password:hover {
            background: var(--white);
            color: var(--primary-black);
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        @media (max-width: 768px) {
            .profile-container {
                padding-top: 80px; /* Smaller padding for mobile */
            }

            .sidebar {
                transform: translateX(-100%);
                transition: transform 0.3s;
                top: 80px;
                height: calc(100vh - 80px);
            }

            .main-content {
                margin-left: 0;
                padding: 15px;
            }

            .action-buttons {
                flex-direction: column;
            }

            .action-btn {
                min-width: 100%;
            }
        }

        @media (max-width: 576px) {
            .profile-header {
                padding: 1rem;
            }

            .profile-body {
                padding: 1rem;
            }

            .info-card {
                padding: 1rem;
            }

            .action-buttons {
                gap: 0.5rem;
            }
        }

        .fade-in {
            animation: fadeIn 0.8s ease-in;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
</head>
<body>
    <div class="profile-container">
        <!-- Sidebar -->
        <div class="sidebar">
            <div class="profile-section">
                <div class="profile-avatar-container">
                    <% if (user.profilePhoto) { %>
                        <img src="/Uploads/profiles/<%= user.profilePhoto %>" alt="Profile Photo" class="profile-avatar-img" id="sidebarProfileImg">
                    <% } else { %>
                        <div class="profile-avatar" id="sidebarProfileAvatar"><%= user.fullname ? user.fullname.charAt(0).toUpperCase() : '👤' %></div>
                    <% } %>
                    <div class="profile-avatar-overlay" onclick="triggerPhotoUpload()">
                        <i class="bi bi-camera"></i>
                    </div>
                </div>
                <div class="profile-name"><%= user.fullname || 'User' %></div>
                <div class="profile-email"><%= user.email || 'No email' %></div>
            </div>

            <div class="menu-section">
                <h3>Manage My Account</h3>
                <a href="#" class="menu-item active" onclick="showSection('profile')">My Profile</a>
                <a href="#" class="menu-item" onclick="showSection('address')">Address Book</a>
                <a href="#" class="menu-item" onclick="showSection('orders')">My Orders</a>
                <a href="#" class="menu-item" onclick="showSection('wishlist')">My Wishlist</a>
                <a href="#" class="menu-item" onclick="showSection('wallet')">Wallet</a>
                <a href="#" class="menu-item" onclick="showSection('coupons')">Coupons</a>
                <a href="#" class="menu-item" onclick="showSection('referrals')">Referrals</a>
                <a href="#" class="menu-item" onclick="showSection('password')">Change Password</a>
            </div>
        </div>

        <!-- Main Content -->
        <div class="main-content">
            <div class="profile-content fade-in">
                <!-- Profile Header -->
                <div class="profile-header text-center">
                    <h2 class="profile-name"><%= user.fullname || 'User' %></h2>
                    <p class="profile-email"><%= user.email || 'No email' %></p>
                </div>

                <!-- Profile Body -->
                <div class="profile-body">
                    <!-- Profile Picture Card -->
                    <div class="info-card">
                        <h5><i class="fas fa-camera"></i> Profile Picture</h5>
                        <div class="row align-items-center">
                            <div class="col-md-4 text-center">
                                <div class="main-profile-avatar-container">
                                    <% if (user.profilePhoto) { %>
                                        <img src="/Uploads/profiles/<%= user.profilePhoto %>" alt="Profile Photo" class="main-profile-avatar-img" id="mainProfileImg">
                                    <% } else { %>
                                        <div class="main-profile-avatar" id="mainProfileAvatar">
                                            <%= user.fullname ? user.fullname.charAt(0).toUpperCase() : '👤' %>
                                        </div>
                                    <% } %>
                                    <div class="main-profile-avatar-overlay" onclick="triggerMainPhotoUpload()">
                                        <i class="bi bi-camera"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="profile-photo-actions">
                                    <h6 class="mb-2">Manage Your Profile Picture</h6>
                                    <p class="text-muted mb-3">Upload a new profile picture or remove the current one. Recommended size: 200x200 pixels.</p>
                                    <div class="d-flex gap-2 flex-wrap">
                                        <button type="button" class="btn btn-primary btn-sm" onclick="triggerMainPhotoUpload()">
                                            <i class="fas fa-upload"></i> Upload New Photo
                                        </button>
                                        <% if (user.profilePhoto) { %>
                                            <button type="button" class="btn btn-outline-danger btn-sm" onclick="deleteProfilePhoto()">
                                                <i class="fas fa-trash"></i> Remove Photo
                                            </button>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Personal Information Card -->
                    <div class="info-card">
                        <h5><i class="fas fa-user-circle"></i> Personal Information</h5>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="fullName" class="form-label">Full Name</label>
                                <input type="text" class="form-control" id="fullName" value="<%= user.fullname || '' %>" readonly>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="email" class="form-label">Email Address</label>
                                <input type="email" class="form-control" id="email" value="<%= user.email || '' %>" readonly>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="phone" class="form-label">Phone Number</label>
                                <input type="tel" class="form-control" id="phone" value="<%= user.phone || '' %>" readonly>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="joinDate" class="form-label">Member Since</label>
                                <input type="text" class="form-control" id="joinDate" value="<%= user.createdAt ? new Date(user.createdAt).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) : 'N/A' %>" readonly>
                            </div>
                        </div>
                        <div class="text-end">
                            <button type="button" class="btn btn-outline-primary" onclick="toggleEdit()">
                                <i class="fas fa-edit"></i> Edit Information
                            </button>
                        </div>
                    </div>

                    <!-- Account Status Card -->
                    <div class="info-card">
                        <h5><i class="fas fa-shield-alt"></i> Account Status</h5>
                        <div class="row align-items-center">
                            <div class="col-md-6">
                                <p class="mb-2"><strong>Current Status:</strong></p>
                                <span class="status-badge status-active">
                                    <i class="fas fa-check-circle"></i>
                                    <%= user.isBlocked ? 'Blocked' : 'Active Account' %>
                                </span>
                            </div>
                            <div class="col-md-6">
                                <p class="mb-2"><strong>Account Type:</strong></p>
                                <p class="mb-0 text-muted">Standard Member</p>
                            </div>
                        </div>
                        <div class="row mt-3">
                            <div class="col-md-6">
                                <p class="mb-1"><strong>Email Verified:</strong> <i class="fas fa-check text-success"></i></p>
                            </div>
                            <div class="col-md-6">
                                <p class="mb-1"><strong>Phone Verified:</strong> <i class="fas fa-times text-danger"></i></p>
                            </div>
                        </div>
                    </div>

                    <!-- Quick Actions Card -->
                    <div class="info-card">
                        <h5><i class="fas fa-cogs"></i> Account Management</h5>
                        <div class="action-buttons">
                            <a href="#" class="action-btn manage-address" onclick="handleAddressClick()">
                                <i class="fas fa-map-marker-alt"></i>
                                Manage Addresses
                            </a>
                            <a href="#" class="action-btn change-password" onclick="handlePasswordClick()">
                                <i class="fas fa-key"></i>
                                Change Password
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Hidden file input for photo upload -->
    <input type="file" id="profilePhotoInput" class="profile-photo-upload" accept="image/*" onchange="uploadProfilePhoto()">

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/js/bootstrap.bundle.min.js" integrity="sha384-j1CDi7MgGQ12Z7Qab0qlWQ/Qqz24Gc6BM0thvEMVjHnfYGF0rmFCozFSxQBxwHKO" crossorigin="anonymous"></script>
    <script>
        let editMode = false;

        function showSection(section) {
            // Remove active class from all menu items
            document.querySelectorAll('.menu-item').forEach(item => {
                item.classList.remove('active');
            });

            // Add active class to clicked item
            event.target.classList.add('active');
        }

        // Profile photo upload functions
        function triggerPhotoUpload() {
            document.getElementById('profilePhotoInput').click();
        }

        function triggerMainPhotoUpload() {
            document.getElementById('profilePhotoInput').click();
        }

        async function uploadProfilePhoto() {
            const fileInput = document.getElementById('profilePhotoInput');
            const file = fileInput.files[0];

            if (!file) return;

            // Validate file type
            const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif'];
            if (!allowedTypes.includes(file.type)) {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid File Type',
                    text: 'Please select a valid image file (JPEG, JPG, PNG, or GIF)',
                    confirmButtonColor: '#111827'
                });
                return;
            }

            // Validate file size (5MB limit)
            if (file.size > 5 * 1024 * 1024) {
                Swal.fire({
                    icon: 'error',
                    title: 'File Too Large',
                    text: 'Please select an image smaller than 5MB',
                    confirmButtonColor: '#111827'
                });
                return;
            }

            const formData = new FormData();
            formData.append('profilePhoto', file);

            try {
                const response = await fetch('/upload-profile-photo', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();

                if (result.success) {
                    // Update sidebar
                    const sidebarContainer = document.querySelector('.profile-avatar-container');
                    sidebarContainer.innerHTML = `
                        <img src="/Uploads/profiles/${result.filename}" alt="Profile Photo" class="profile-avatar-img" id="sidebarProfileImg">
                        <div class="profile-avatar-overlay" onclick="triggerPhotoUpload()">
                            <i class="bi bi-camera"></i>
                        </div>
                    `;

                    // Update main profile image
                    const mainContainer = document.querySelector('.main-profile-avatar-container');
                    if (mainContainer) {
                        mainContainer.innerHTML = `
                            <img src="/Uploads/profiles/${result.filename}" alt="Profile Photo" class="main-profile-avatar-img" id="mainProfileImg">
                            <div class="main-profile-avatar-overlay" onclick="triggerMainPhotoUpload()">
                                <i class="bi bi-camera"></i>
                            </div>
                        `;
                    }

                    // Update delete button visibility
                    updateDeleteButtonVisibility(true);

                    Swal.fire({
                        icon: 'success',
                        title: 'Photo Updated!',
                        text: result.message,
                        confirmButtonColor: '#111827'
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Upload Failed',
                        text: result.message,
                        confirmButtonColor: '#111827'
                    });
                }
            } catch (error) {
                console.error('Upload error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Upload Failed',
                    text: 'An error occurred while uploading the photo',
                    confirmButtonColor: '#111827'
                });
            }

            // Clear the file input
            fileInput.value = '';
        }

        // Delete profile photo function
        async function deleteProfilePhoto() {
            const result = await Swal.fire({
                title: 'Delete Profile Photo?',
                text: 'Are you sure you want to remove your profile photo? This action cannot be undone.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#dc3545',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Yes, Delete',
                cancelButtonText: 'Cancel'
            });

            if (!result.isConfirmed) {
                return;
            }

            try {
                // Show loading
                Swal.fire({
                    title: 'Deleting Photo...',
                    text: 'Please wait while we remove your profile photo.',
                    allowOutsideClick: false,
                    allowEscapeKey: false,
                    showConfirmButton: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });

                const response = await fetch('/delete-profile-photo', {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                const deleteResult = await response.json();

                if (deleteResult.success) {
                    // Update sidebar to show default avatar
                    const sidebarContainer = document.querySelector('.profile-avatar-container');
                    const userName = '<%= user.fullname ? user.fullname.charAt(0).toUpperCase() : "👤" %>';
                    sidebarContainer.innerHTML = `
                        <div class="profile-avatar" id="sidebarProfileAvatar">${userName}</div>
                        <div class="profile-avatar-overlay" onclick="triggerPhotoUpload()">
                            <i class="bi bi-camera"></i>
                        </div>
                    `;

                    // Update main profile image to show default avatar
                    const mainContainer = document.querySelector('.main-profile-avatar-container');
                    if (mainContainer) {
                        mainContainer.innerHTML = `
                            <div class="main-profile-avatar" id="mainProfileAvatar">${userName}</div>
                            <div class="main-profile-avatar-overlay" onclick="triggerMainPhotoUpload()">
                                <i class="bi bi-camera"></i>
                            </div>
                        `;
                    }

                    // Update delete button visibility
                    updateDeleteButtonVisibility(false);

                    Swal.fire({
                        icon: 'success',
                        title: 'Photo Deleted!',
                        text: deleteResult.message,
                        confirmButtonColor: '#111827'
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Delete Failed',
                        text: deleteResult.message,
                        confirmButtonColor: '#111827'
                    });
                }
            } catch (error) {
                console.error('Delete error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Delete Failed',
                    text: 'An error occurred while deleting the photo',
                    confirmButtonColor: '#111827'
                });
            }
        }

        // Helper function to update delete button visibility
        function updateDeleteButtonVisibility(hasPhoto) {
            const deleteButton = document.querySelector('.btn-outline-danger');
            if (deleteButton) {
                if (hasPhoto) {
                    deleteButton.style.display = 'inline-block';
                } else {
                    deleteButton.style.display = 'none';
                }
            }
        }

        function toggleEdit() {
            const inputs = document.querySelectorAll('#fullName, #email, #phone');
            const button = document.querySelector('.btn-outline-primary');

            if (!editMode) {
                inputs.forEach(input => {
                    input.removeAttribute('readonly');
                    input.style.background = '#f8f9fa';
                });
                button.innerHTML = '<i class="fas fa-save"></i> Save Changes';
                button.classList.remove('btn-outline-primary');
                button.classList.add('btn-primary');
                editMode = true;
            } else {
                inputs.forEach(input => {
                    input.setAttribute('readonly', 'readonly');
                    input.style.background = '#ffffff';
                });
                button.innerHTML = '<i class="fas fa-edit"></i> Edit Information';
                button.classList.remove('btn-primary');
                button.classList.add('btn-outline-primary');
                editMode = false;

                // Show success message
                Swal.fire({
                    icon: 'success',
                    title: 'Profile Updated!',
                    text: 'Your profile information has been updated successfully.',
                    confirmButtonColor: '#111827'
                });
            }
        }

        function handleAddressClick() {
            Swal.fire({
                icon: 'info',
                title: 'Address Management',
                text: 'Redirecting to address management...',
                confirmButtonColor: '#111827'
            });
            // Here you would typically redirect to an address management page
        }

        function handlePasswordClick() {
            Swal.fire({
                icon: 'info',
                title: 'Password Change',
                text: 'Redirecting to password change...',
                confirmButtonColor: '#111827'
            });
            // Here you would typically redirect to a password change page
        }

        // Add smooth scrolling and animations
        document.addEventListener('DOMContentLoaded', function() {
            const cards = document.querySelectorAll('.info-card');
            cards.forEach((card, index) => {
                card.style.animationDelay = `${index * 0.1}s`;
                card.classList.add('fade-in');
            });
        });
    </script>
</body>
</html>