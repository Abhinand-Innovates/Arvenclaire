
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="../../styles/admin/customer-listing.css">

    <%- include("../partials/admin/sidebar")Â %>
    <!-- Main Content -->
    <div class="main-content">
        <!-- Page Header -->
        <div class="page-header">
            <h1 class="page-title">Customer Management</h1>
            <p class="page-subtitle">Manage and view all registered customers</p>
        </div>

        <!-- Customer Table Container -->
        <div class="customer-table-container">
            <!-- Table Controls -->
            <div class="table-controls">
                <div class="search-box">
                    <i class="fas fa-search"></i>
                    <input type="text" class="form-control" id="customerSearch" placeholder="Search customers...">
                </div>
                
                <div class="filter-controls">
                    <select class="form-select" id="statusFilter" style="width: auto;">
                        <option value="">All Status</option>
                        <option value="active">Active</option>
                        <option value="blocked">Blocked</option>
                    </select>
                </div>
            </div>

            <!-- Customers Table -->
            <div class="table-responsive">
                <table class="customers-table">
                    <thead>
                        <tr>
                            <th>Customer</th>
                            <th>Email</th>
                            <th>Phone</th>
                            <th>Join Date</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="customersTableBody">
                        <!-- Customer rows will be populated here -->
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <div class="pagination-container">
                <div class="pagination-info">
                    Showing <span id="showingStart">1</span> to <span id="showingEnd">10</span> of <span id="totalCustomers">25</span> customers
                </div>
                
                <nav aria-label="Customer pagination">
                    <ul class="pagination pagination-sm mb-0">
                        <li class="page-item" id="prevPage">
                            <a class="page-link" href="#" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                        <li class="page-item active"><a class="page-link" href="#">1</a></li>
                        <li class="page-item"><a class="page-link" href="#">2</a></li>
                        <li class="page-item"><a class="page-link" href="#">3</a></li>
                        <li class="page-item" id="nextPage">
                            <a class="page-link" href="#" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>

    <script>
        // Sample customer data
        const customersData = [
            {
                id: 1,
                name: "John Smith",
                email: "john.smith@email.com",
                phone: "+1 234 567 8901",
                joinDate: "2024-01-15",
                totalOrders: 12,
                status: "active"
            },
            {
                id: 2,
                name: "Sarah Johnson",
                email: "sarah.johnson@email.com",
                phone: "+1 234 567 8902",
                joinDate: "2024-02-20",
                totalOrders: 8,
                status: "active"
            },
            {
                id: 3,
                name: "Michael Brown",
                email: "michael.brown@email.com",
                phone: "+1 234 567 8903",
                joinDate: "2024-01-10",
                totalOrders: 5,
                status: "blocked"
            },
            {
                id: 4,
                name: "Emily Davis",
                email: "emily.davis@email.com",
                phone: "+1 234 567 8904",
                joinDate: "2024-03-05",
                totalOrders: 15,
                status: "active"
            },
            {
                id: 5,
                name: "David Wilson",
                email: "david.wilson@email.com",
                phone: "+1 234 567 8905",
                joinDate: "2024-02-14",
                totalOrders: 0,
                status: "blocked"
            },
            {
                id: 6,
                name: "Lisa Garcia",
                email: "lisa.garcia@email.com",
                phone: "+1 234 567 8906",
                joinDate: "2024-03-12",
                totalOrders: 22,
                status: "active"
            },
            {
                id: 7,
                name: "Robert Martinez",
                email: "robert.martinez@email.com",
                phone: "+1 234 567 8907",
                joinDate: "2024-01-28",
                totalOrders: 7,
                status: "active"
            },
            {
                id: 8,
                name: "Amanda Taylor",
                email: "amanda.taylor@email.com",
                phone: "+1 234 567 8908",
                joinDate: "2024-02-03",
                totalOrders: 3,
                status: "blocked"
            }
        ];

        let currentPage = 1;
        let customersPerPage = 5;
        let filteredCustomers = [...customersData];

        document.addEventListener('DOMContentLoaded', function() {
            const customerSearch = document.getElementById('customerSearch');
            const statusFilter = document.getElementById('statusFilter');

            // Initialize customer table
            renderCustomersTable();

            // Search functionality
            customerSearch.addEventListener('input', function() {
                filterCustomers();
            });

            // Status filter functionality
            statusFilter.addEventListener('change', function() {
                filterCustomers();
            });
        });

        function filterCustomers() {
            const searchTerm = document.getElementById('customerSearch').value.toLowerCase();
            const statusFilter = document.getElementById('statusFilter').value;

            filteredCustomers = customersData.filter(customer => {
                const matchesSearch = customer.name.toLowerCase().includes(searchTerm) ||
                                    customer.email.toLowerCase().includes(searchTerm) ||
                                    customer.phone.includes(searchTerm);
                
                const matchesStatus = !statusFilter || customer.status === statusFilter;

                return matchesSearch && matchesStatus;
            });

            currentPage = 1;
            renderCustomersTable();
        }

        function renderCustomersTable() {
            const startIndex = (currentPage - 1) * customersPerPage;
            const endIndex = startIndex + customersPerPage;
            const paginatedCustomers = filteredCustomers.slice(startIndex, endIndex);

            const tableBody = document.getElementById('customersTableBody');
            tableBody.innerHTML = '';

            paginatedCustomers.forEach(customer => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>
                        <div class="customer-info">
                            <div class="customer-avatar">
                                ${customer.name.charAt(0).toUpperCase()}
                            </div>
                            <div class="customer-details">
                                <h6>${customer.name}</h6>
                                <p>ID: #${customer.id.toString().padStart(4, '0')}</p>
                            </div>
                        </div>
                    </td>
                    <td>${customer.email}</td>
                    <td>${customer.phone}</td>
                    <td>${new Date(customer.joinDate).toLocaleDateString()}</td>
                    <td>
                        <span class="status-badge status-${customer.status}">
                            ${customer.status}
                        </span>
                    </td>
                    <td>
                        <div class="action-buttons">
                            <button class="btn-action btn-view" onclick="viewCustomer(${customer.id})">
                                <i class="fas fa-eye"></i>
                            </button>
                            <button class="btn-action btn-toggle ${customer.status === 'blocked' ? 'blocked' : ''}" onclick="toggleCustomerStatus(${customer.id})">
                                ${customer.status === 'active' ? 'Block' : customer.status === 'blocked' ? 'Activate' : 'Activate'}
                            </button>
                        </div>
                    </td>
                `;
                tableBody.appendChild(row);
            });

            // Update pagination info
            document.getElementById('showingStart').textContent = startIndex + 1;
            document.getElementById('showingEnd').textContent = Math.min(endIndex, filteredCustomers.length);
            document.getElementById('totalCustomers').textContent = filteredCustomers.length;
        }

        function viewCustomer(customerId) {
            const customer = customersData.find(c => c.id === customerId);
            if (customer) {
                Swal.fire({
                    title: 'Customer Details',
                    html: `
                        <div class="text-start">
                            <p><strong>Name:</strong> ${customer.name}</p>
                            <p><strong>Email:</strong> ${customer.email}</p>
                            <p><strong>Phone:</strong> ${customer.phone}</p>
                            <p><strong>Join Date:</strong> ${new Date(customer.joinDate).toLocaleDateString()}</p>
                            <p><strong>Status:</strong> <span class="status-badge status-${customer.status}">${customer.status}</span></p>
                        </div>
                    `,
                    confirmButtonColor: '#000000'
                });
            }
        }

        function toggleCustomerStatus(customerId) {
            const customer = customersData.find(c => c.id === customerId);
            if (customer) {
                const newStatus = customer.status === 'active' ? 'blocked' : 'active';
                const actionText = newStatus === 'blocked' ? 'block' : 'activate';
                
                Swal.fire({
                    title: 'Confirm Status Change',
                    text: `Are you sure you want to ${actionText} ${customer.name}?`,
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#000000',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: `Yes, ${actionText.charAt(0).toUpperCase() + actionText.slice(1)}`,
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        customer.status = newStatus;
                        filterCustomers();
                        
                        Swal.fire({
                            title: 'Success!',
                            text: `Customer has been ${newStatus === 'blocked' ? 'blocked' : 'activated'}.`,
                            icon: 'success',
                            confirmButtonColor: '#000000'
                        });
                    }
                });
            }
        }
    </script>
</body>

</html>