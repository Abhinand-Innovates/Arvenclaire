<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add New Product - Admin Dashboard</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/2.0.0/cropper.min.css">
    <link rel="stylesheet" href="../../styles/admin/add-new-product.css">
    <%- include("../partials/admin/sidebar") %>
    <style>
        .cropper-container { max-width: 400px; margin: 0 auto; }
        .image-preview img { max-width: 100px; max-height: 100px; object-fit: cover; }
        .error-message { color: red; font-size: 0.8em; display: none; }
        .error .error-message { display: block; }
    </style>
</head>
<body>
    <div class="main-content">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/admin-dashboard"><i class="fas fa-home"></i> Dashboard</a></li>
                <li class="breadcrumb-item"><a href="/get-product">Products</a></li>
                <li class="breadcrumb-item active" aria-current="page">Add New Product</li>
            </ol>
        </nav>
        <div class="page-header">
            <h1 class="page-title">Add New Product</h1>
        </div>
        <div class="content-container">
            <form id="addProductForm" enctype="multipart/form-data">
                <div class="form-section">
                    <h3 class="section-title">Basic Information</h3>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="name" class="form-label">Watch Name <span class="required">*</span></label>
                            <input type="text" id="name" name="name" class="form-control" placeholder="Enter product name" required>
                            <div class="error-message">Please enter a product name</div>
                        </div>
                        <div class="form-group">
                            <label for="brand" class="form-label">Brand <span class="required">*</span></label>
                            <input type="text" id="brand" name="brand" class="form-control" placeholder="Enter brand name" required>
                            <div class="error-message">Please enter a brand name</div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="category" class="form-label">Category <span class="required">*</span></label>
                            <select id="category" name="category" class="form-select" required>
                                <option value="">Select Category</option>
                            </select>
                            <div class="error-message">Please select a category</div>
                        </div>
                        <div class="form-group">
                            <label for="material" class="form-label">Material <span class="required">*</span></label>
                            <input type="text" id="material" name="material" class="form-control" placeholder="e.g., Stainless Steel" required>
                            <div class="error-message">Please enter the material</div>
                        </div>
                    </div>
                </div>
                <div class="form-section">
                    <h3 class="section-title">Pricing & Stock</h3>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="regularPrice" class="form-label">Regular Price <span class="required">*</span></label>
                            <input type="number" id="regularPrice" name="regularPrice" class="form-control" placeholder="Enter regular price" step="0.01" required>
                            <div class="error-message">Please enter a valid regular price</div>
                        </div>
                        <div class="form-group">
                            <label for="sellingPrice" class="form-label">Selling Price <span class="required">*</span></label>
                            <input type="number" id="sellingPrice" name="sellingPrice" class="form-control" placeholder="Enter selling price" step="0.01" required>
                            <div class="error-message">Please enter a valid selling price</div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="discount" class="form-label">Discount (%)</label>
                            <input type="number" id="discount" name="discount" class="form-control" placeholder="Enter discount percentage" step="0.01" min="0" max="100">
                            <div class="error-message">Please enter a valid discount (0-100)</div>
                        </div>
                        <div class="form-group">
                            <label for="stock" class="form-label">Stock Quantity <span class="required">*</span></label>
                            <input type="number" id="stock" name="stock" class="form-control" placeholder="Enter stock quantity" required>
                            <div class="error-message">Please enter a valid stock quantity</div>
                        </div>
                    </div>
                </div>
                <div class="form-section">
                    <h3 class="section-title">Product Details</h3>
                    <div class="form-group">
                        <label for="features" class="form-label">Features</label>
                        <textarea id="features" name="features" class="form-textarea" placeholder="Enter product features (comma separated)" rows="3"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="description" class="form-label">Description</label>
                        <textarea id="description" name="description" class="form-textarea" placeholder="Enter product description" rows="4"></textarea>
                    </div>
                </div>
                <div class="form-section">
                    <h3 class="section-title">Product Images (Minimum 3 required)</h3>
                    <div class="form-group">
                        <label for="productImages" class="form-label">Upload Images <span class="required">*</span></label>
                        <input type="file" id="productImages" name="productImages" class="form-control" accept="image/*" multiple required>
                        <div class="error-message" id="imagesError">Please upload at least 3 images</div>
                    </div>
                    <div id="imagePreviews" class="images-grid"></div>
                    <div id="cropModal" class="modal fade" tabindex="-1">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">Crop Image</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                </div>
                                <div class="modal-body">
                                    <div id="cropperImage" style="max-width: 100%;"></div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                    <button type="button" class="btn btn-primary" id="cropConfirm">Crop & Save</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-actions" style="display: flex; justify-content: center; gap: 1rem;">
                    <a href="/get-product" class="btn-secondary"><i class="fas fa-times"></i> Cancel</a>
                    <button type="submit" class="btn-success"><i class="fas fa-save"></i> Save Product</button>
                </div>
            </form>
        </div>
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.10.5/sweetalert2.all.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/2.0.0/cropper.min.js"></script>
    <script>
        let categories = [];
        let croppedImages = [];
        let currentCropper;
        let currentFileIndex;

        async function fetchCategories() {
            try {
                const response = await fetch('/get-categories');
                if (!response.ok) throw new Error('Failed to fetch categories');
                categories = await response.json();
                populateCategoryDropdown();
            } catch (error) {
                Swal.fire('Error!', `Could not fetch categories: ${error.message}`, 'error');
            }
        }

        function populateCategoryDropdown() {
            const categorySelect = document.getElementById('category');
            categorySelect.innerHTML = '<option value="">Select Category</option>';
            categories.forEach(category => {
                categorySelect.innerHTML += `<option value="${category.name}">${category.name}</option>`;
            });
        }

        function initializeCropper(file, index) {
            const reader = new FileReader();
            reader.onload = function(e) {
                const img = document.createElement('img');
                img.src = e.target.result;
                const cropperImage = document.getElementById('cropperImage');
                cropperImage.innerHTML = '';
                cropperImage.appendChild(img);
                
                currentCropper = new Cropper(img, {
                    aspectRatio: 1,
                    viewMode: 2,
                    autoCropArea: 0.8,
                    responsive: true
                });
                
                const modal = new bootstrap.Modal(document.getElementById('cropModal'));
                modal.show();
                currentFileIndex = index;
            };
            reader.readAsDataURL(file);
        }

        document.getElementById('cropConfirm').addEventListener('click', function() {
            const canvas = currentCropper.getCroppedCanvas({
                width: 400,
                height: 400
            });
            canvas.toBlob(blob => {
                const preview = document.createElement('div');
                preview.className = 'image-preview';
                preview.innerHTML = `<img src="${canvas.toDataURL()}" alt="Preview"><button type="button" class="image-remove" onclick="removeImage(${currentFileIndex})"><i class="fas fa-times"></i></button>`;
                document.getElementById('imagePreviews').appendChild(preview);
                
                const file = new File([blob], `image_${currentFileIndex}.jpg`, { type: 'image/jpeg' });
                croppedImages[currentFileIndex] = file;
                
                currentCropper.destroy();
                bootstrap.Modal.getInstance(document.getElementById('cropModal')).hide();
            }, 'image/jpeg', 0.8);
        });

        function removeImage(index) {
            croppedImages[index] = null;
            document.getElementById('imagePreviews').children[index].remove();
        }

        document.getElementById('productImages').addEventListener('change', function(e) {
            const files = Array.from(e.target.files);
            if (files.length < 3) {
                document.getElementById('imagesError').style.display = 'block';
                return;
            }
            document.getElementById('imagesError').style.display = 'none';
            document.getElementById('imagePreviews').innerHTML = '';
            croppedImages = [];
            files.forEach((file, index) => {
                initializeCropper(file, index);
            });
        });

        function validateForm() {
            let isValid = true;
            const requiredFields = ['name', 'brand', 'category', 'material', 'regularPrice', 'sellingPrice', 'stock'];
            document.querySelectorAll('.form-group').forEach(group => group.classList.remove('error'));

            requiredFields.forEach(fieldName => {
                const field = document.getElementById(fieldName);
                if (!field.value.trim()) {
                    field.closest('.form-group').classList.add('error');
                    isValid = false;
                }
            });

            if (croppedImages.filter(img => img).length < 3) {
                document.getElementById('imagesError').style.display = 'block';
                isValid = false;
            }

            const regularPrice = parseFloat(document.getElementById('regularPrice').value);
            const sellingPrice = parseFloat(document.getElementById('sellingPrice').value);
            if (sellingPrice > regularPrice) {
                const sellingPriceGroup = document.getElementById('sellingPrice').closest('.form-group');
                sellingPriceGroup.classList.add('error');
                sellingPriceGroup.querySelector('.error-message').textContent = 'Selling price cannot be higher than regular price';
                isValid = false;
            }

            const discount = document.getElementById('discount').value.trim() ? parseFloat(document.getElementById('discount').value) : null;
            if (discount !== null && (discount < 0 || discount > 100)) {
                document.getElementById('discount').closest('.form-group').classList.add('error');
                isValid = false;
            }

            return isValid;
        }

        document.getElementById('addProductForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            if (!validateForm()) {
                Swal.fire('Validation Error!', 'Please fill in all required fields correctly and upload at least 3 images.', 'error');
                return;
            }

            Swal.fire({ title: 'Saving Product...', allowOutsideClick: false, didOpen: () => Swal.showLoading() });
            const formData = new FormData(this);
            croppedImages.filter(img => img).forEach((img, index) => {
                formData.append('productImages', img);
            });

            try {
                const response = await fetch('/api/products', {
                    method: 'POST',
                    body: formData
                });
                if (!response.ok) throw new Error('Failed to save product');
                Swal.fire({
                    title: 'Success!',
                    text: 'Product has been added successfully!',
                    icon: 'success',
                    confirmButtonText: 'Go to Products'
                }).then(() => window.location.href = '/get-product');
            } catch (error) {
                Swal.fire('Error!', `Failed to save product: ${error.message}`, 'error');
            }
        });

        document.addEventListener('DOMContentLoaded', fetchCategories);
    </script>
</body>
</html>